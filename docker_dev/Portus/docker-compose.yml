version: "2"

services:
  portus:
    image: opensuse/portus:head
    environment:
      - CCONFIG=PORTUS
      - PORTUS_MACHINE_FQDN_VALUE=${MACHINE_FQDN}

      # DB. The password for the database should definitely not be here. You are
      # probably better off with Docker Swarm secrets.
      - PORTUS_DB_HOST=db
      - PORTUS_DB_DATABASE=portus_production
      - PORTUS_DB_PASSWORD=${DATABASE_PASSWORD}
      - PORTUS_DB_POOL=5

      # Secrets. It can possibly be handled better with Swarm's secrets.
      - PORTUS_SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - PORTUS_KEY_PATH=/certificates/portus.key
      - PORTUS_PASSWORD=${PORTUS_PASSWORD}

      # SSL
      - PORTUS_PUMA_TLS_KEY=/certificates/portus.key
      - PORTUS_PUMA_TLS_CERT=/certificates/portus.crt
      
      # LDAP
      - PORTUS_LDAP_ENABLED=true
      - PORTUS_LDAP_HOSTNAME=smusdir.bms.com
      - PORTUS_LDAP_PORT=389
      - PORTUS_LDAP_UID=uid
      - PORTUS_LDAP_BASE=ou=People,o=bms.com
      - PORTUS_LDAP_GROUP_BASE=
      - PORTUS_LDAP_FILTER=
      - PORTUS_LDAP_AUTHENTICATION_ENABLED=
      - PORTUS_LDAP_AUTHENTICATION_BIND_DN=
      - PORTUS_LDAP_AUTHENTICATION_PASSWORD=
      - PORTUS_LDAP_ENCRYPTION_METHOD=
      - PORTUS_LDAP_ENCRYPTION_OPTIONS_CA_FILE=
      - PORTUS_LDAP_ENCRYPTION_OPTIONS_SSL_VERSION=

      # Email Guessing
      - PORTUS_LDAP_GUESS_EMAIL_ENABLED=true
      - PORTUS_LDAP_GUESS_EMAIL_ATTR=mail

      # NGinx is serving the assets instead of Puma. If you want to change this,
      # uncomment this line.
      #- RAILS_SERVE_STATIC_FILES='true'
    ports:
      - 3000:3000
    links:
      - db
    volumes:
      - static:/srv/Portus/public
      - ./secrets:/certificates:ro
      - ./secrets/ldap:/ldap-certificates:ro

  background:
    image: opensuse/portus:head
    depends_on:
      - portus
      - db
    environment:
      # Theoretically not needed, but cconfig's been buggy on this...
      - CCONFIG_PREFIX=PORTUS
      - PORTUS_MACHINE_FQDN_VALUE=${MACHINE_FQDN}

      # DB. The password for the database should definitely not be here. You are
      # probably better off with Docker Swarm secrets.
      - PORTUS_DB_HOST=db
      - PORTUS_DB_DATABASE=portus_production
      - PORTUS_DB_PASSWORD=${DATABASE_PASSWORD}
      - PORTUS_DB_POOL=5

      # Secrets. It can possibly be handled better with Swarm's secrets.
      - PORTUS_SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - PORTUS_KEY_PATH=/certificates/portus.key
      - PORTUS_PASSWORD=${PORTUS_PASSWORD}

      - PORTUS_BACKGROUND=true

      # LDAP
      - PORTUS_LDAP_ENABLED=true
      - PORTUS_LDAP_HOSTNAME="smusdir.bms.com"
      - PORTUS_LDAP_PORT=389
      - PORTUS_LDAP_UID=uid
      - PORTUS_LDAP_BASE=ou=People,o=bms.com
      - PORTUS_LDAP_GROUP_BASE=
      - PORTUS_LDAP_FILTER=
      - PORTUS_LDAP_AUTHENTICATION_ENABLED=
      - PORTUS_LDAP_AUTHENTICATION_BIND_DN=
      - PORTUS_LDAP_AUTHENTICATION_PASSWORD=
      - PORTUS_LDAP_ENCRYPTION_METHOD=
      - PORTUS_LDAP_ENCRYPTION_OPTIONS_CA_FILE=
      - PORTUS_LDAP_ENCRYPTION_OPTIONS_SSL_VERSION=


    links:
      - db
    volumes:
      - ./secrets:/certificates:ro
      - ./secrets/ldap:/ldap-certificates:ro

  # ldap:
  #   image: osixia/openldap:1.2.0
  #   command: --copy-service
  #   hostname: smu
  #   environment:
  #     - LDAP_TLS_ENFORCE=true
  #     - LDAP_TLS_CRT_FILENAME=ldap.crt
  #     - LDAP_TLS_KEY_FILENAME=ldap.key
  #     - LDAP_TLS_CA_CRT_FILENAME=ca.crt
  #     - LDAP_TLS_VERIFY_CLIENT=try
  #   volumes:
  #     - ./secrets/ldap:/container/service/slapd/assets/certs:ro

  db:
    image: library/mariadb:10.0.23
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci --init-connect='SET NAMES UTF8;' --innodb-flush-log-at-trx-commit=0
    environment:
      - MYSQL_DATABASE=portus_production

      # Again, the password shouldn't be handled like this.
      - MYSQL_ROOT_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - /var/lib/portus/mariadb:/var/lib/mysql

  registry:
    image: library/registry:2.6
    command: ["/bin/sh", "/etc/docker/registry/init"]
    environment:
      # Authentication
      REGISTRY_AUTH_TOKEN_REALM: https://${MACHINE_FQDN}/v2/token
      REGISTRY_AUTH_TOKEN_SERVICE: ${MACHINE_FQDN}
      REGISTRY_AUTH_TOKEN_ISSUER: ${MACHINE_FQDN}
      REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE: /secrets/portus.crt

      # SSL
      REGISTRY_HTTP_TLS_CERTIFICATE: /secrets/portus.crt
      REGISTRY_HTTP_TLS_KEY: /secrets/portus.key

      # Portus endpoint
      REGISTRY_NOTIFICATIONS_ENDPOINTS: >
        - name: portus
          url: https://${MACHINE_FQDN}/v2/webhooks/events
          timeout: 2000ms
          threshold: 5
          backoff: 1s
    volumes:
      - /var/lib/portus/registry:/var/lib/registry
      - ./secrets:/secrets:ro
      - ./registry/config.yml:/etc/docker/registry/config.yml:ro
      - ./registry/init:/etc/docker/registry/init:ro
    ports:
      - 5000:5000
      - 5001:5001 # required to access debug service
    links:
      - portus:portus

  nginx:
    image: library/nginx:alpine
    networks:
      default:
        aliases:
          - ${MACHINE_FQDN}
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./secrets:/secrets:ro
      - static:/srv/Portus/public:ro
    ports:
      - 80:80
      - 443:443
    links:
      - registry:registry
      - portus:portus

volumes:
  static:
    driver: local
